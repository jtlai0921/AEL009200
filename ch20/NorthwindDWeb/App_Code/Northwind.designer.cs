#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.1
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Northwind")]
public partial class NorthwindDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 擴充性方法定義
  partial void OnCreated();
  partial void Insert供應商(供應商 instance);
  partial void Update供應商(供應商 instance);
  partial void Delete供應商(供應商 instance);
  partial void Insert客戶(客戶 instance);
  partial void Update客戶(客戶 instance);
  partial void Delete客戶(客戶 instance);
  partial void Insert訂貨主檔(訂貨主檔 instance);
  partial void Update訂貨主檔(訂貨主檔 instance);
  partial void Delete訂貨主檔(訂貨主檔 instance);
  partial void Insert訂貨明細(訂貨明細 instance);
  partial void Update訂貨明細(訂貨明細 instance);
  partial void Delete訂貨明細(訂貨明細 instance);
  partial void Insert員工(員工 instance);
  partial void Update員工(員工 instance);
  partial void Delete員工(員工 instance);
  partial void Insert產品資料(產品資料 instance);
  partial void Update產品資料(產品資料 instance);
  partial void Delete產品資料(產品資料 instance);
  partial void Insert產品類別(產品類別 instance);
  partial void Update產品類別(產品類別 instance);
  partial void Delete產品類別(產品類別 instance);
  partial void Insert貨運公司(貨運公司 instance);
  partial void Update貨運公司(貨運公司 instance);
  partial void Delete貨運公司(貨運公司 instance);
  #endregion
	
	public NorthwindDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["NorthwindConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public NorthwindDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public NorthwindDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public NorthwindDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public NorthwindDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<供應商> 供應商
	{
		get
		{
			return this.GetTable<供應商>();
		}
	}
	
	public System.Data.Linq.Table<客戶> 客戶
	{
		get
		{
			return this.GetTable<客戶>();
		}
	}
	
	public System.Data.Linq.Table<訂貨主檔> 訂貨主檔
	{
		get
		{
			return this.GetTable<訂貨主檔>();
		}
	}
	
	public System.Data.Linq.Table<訂貨明細> 訂貨明細
	{
		get
		{
			return this.GetTable<訂貨明細>();
		}
	}
	
	public System.Data.Linq.Table<員工> 員工
	{
		get
		{
			return this.GetTable<員工>();
		}
	}
	
	public System.Data.Linq.Table<產品資料> 產品資料
	{
		get
		{
			return this.GetTable<產品資料>();
		}
	}
	
	public System.Data.Linq.Table<產品類別> 產品類別
	{
		get
		{
			return this.GetTable<產品類別>();
		}
	}
	
	public System.Data.Linq.Table<貨運公司> 貨運公司
	{
		get
		{
			return this.GetTable<貨運公司>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.供應商")]
public partial class 供應商 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _供應商編號;
	
	private string _供應商1;
	
	private string _連絡人;
	
	private string _連絡人職稱;
	
	private string _地址;
	
	private string _城市;
	
	private string _行政區;
	
	private string _郵遞區號;
	
	private string _國家地區;
	
	private string _電話;
	
	private string _傳真電話;
	
	private string _首頁;
	
	private EntitySet<產品資料> _產品資料;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On供應商編號Changing(int value);
    partial void On供應商編號Changed();
    partial void On供應商1Changing(string value);
    partial void On供應商1Changed();
    partial void On連絡人Changing(string value);
    partial void On連絡人Changed();
    partial void On連絡人職稱Changing(string value);
    partial void On連絡人職稱Changed();
    partial void On地址Changing(string value);
    partial void On地址Changed();
    partial void On城市Changing(string value);
    partial void On城市Changed();
    partial void On行政區Changing(string value);
    partial void On行政區Changed();
    partial void On郵遞區號Changing(string value);
    partial void On郵遞區號Changed();
    partial void On國家地區Changing(string value);
    partial void On國家地區Changed();
    partial void On電話Changing(string value);
    partial void On電話Changed();
    partial void On傳真電話Changing(string value);
    partial void On傳真電話Changed();
    partial void On首頁Changing(string value);
    partial void On首頁Changed();
    #endregion
	
	public 供應商()
	{
		this._產品資料 = new EntitySet<產品資料>(new Action<產品資料>(this.attach_產品資料), new Action<產品資料>(this.detach_產品資料));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_供應商編號", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int 供應商編號
	{
		get
		{
			return this._供應商編號;
		}
		set
		{
			if ((this._供應商編號 != value))
			{
				this.On供應商編號Changing(value);
				this.SendPropertyChanging();
				this._供應商編號 = value;
				this.SendPropertyChanged("供應商編號");
				this.On供應商編號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="供應商", Storage="_供應商1", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
	public string 供應商1
	{
		get
		{
			return this._供應商1;
		}
		set
		{
			if ((this._供應商1 != value))
			{
				this.On供應商1Changing(value);
				this.SendPropertyChanging();
				this._供應商1 = value;
				this.SendPropertyChanged("供應商1");
				this.On供應商1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_連絡人", DbType="NVarChar(30)")]
	public string 連絡人
	{
		get
		{
			return this._連絡人;
		}
		set
		{
			if ((this._連絡人 != value))
			{
				this.On連絡人Changing(value);
				this.SendPropertyChanging();
				this._連絡人 = value;
				this.SendPropertyChanged("連絡人");
				this.On連絡人Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_連絡人職稱", DbType="NVarChar(30)")]
	public string 連絡人職稱
	{
		get
		{
			return this._連絡人職稱;
		}
		set
		{
			if ((this._連絡人職稱 != value))
			{
				this.On連絡人職稱Changing(value);
				this.SendPropertyChanging();
				this._連絡人職稱 = value;
				this.SendPropertyChanged("連絡人職稱");
				this.On連絡人職稱Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_地址", DbType="NVarChar(60)")]
	public string 地址
	{
		get
		{
			return this._地址;
		}
		set
		{
			if ((this._地址 != value))
			{
				this.On地址Changing(value);
				this.SendPropertyChanging();
				this._地址 = value;
				this.SendPropertyChanged("地址");
				this.On地址Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_城市", DbType="NVarChar(15)")]
	public string 城市
	{
		get
		{
			return this._城市;
		}
		set
		{
			if ((this._城市 != value))
			{
				this.On城市Changing(value);
				this.SendPropertyChanging();
				this._城市 = value;
				this.SendPropertyChanged("城市");
				this.On城市Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_行政區", DbType="NVarChar(15)")]
	public string 行政區
	{
		get
		{
			return this._行政區;
		}
		set
		{
			if ((this._行政區 != value))
			{
				this.On行政區Changing(value);
				this.SendPropertyChanging();
				this._行政區 = value;
				this.SendPropertyChanged("行政區");
				this.On行政區Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_郵遞區號", DbType="NVarChar(10)")]
	public string 郵遞區號
	{
		get
		{
			return this._郵遞區號;
		}
		set
		{
			if ((this._郵遞區號 != value))
			{
				this.On郵遞區號Changing(value);
				this.SendPropertyChanging();
				this._郵遞區號 = value;
				this.SendPropertyChanged("郵遞區號");
				this.On郵遞區號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_國家地區", DbType="NVarChar(15)")]
	public string 國家地區
	{
		get
		{
			return this._國家地區;
		}
		set
		{
			if ((this._國家地區 != value))
			{
				this.On國家地區Changing(value);
				this.SendPropertyChanging();
				this._國家地區 = value;
				this.SendPropertyChanged("國家地區");
				this.On國家地區Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_電話", DbType="NVarChar(24)")]
	public string 電話
	{
		get
		{
			return this._電話;
		}
		set
		{
			if ((this._電話 != value))
			{
				this.On電話Changing(value);
				this.SendPropertyChanging();
				this._電話 = value;
				this.SendPropertyChanged("電話");
				this.On電話Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_傳真電話", DbType="NVarChar(24)")]
	public string 傳真電話
	{
		get
		{
			return this._傳真電話;
		}
		set
		{
			if ((this._傳真電話 != value))
			{
				this.On傳真電話Changing(value);
				this.SendPropertyChanging();
				this._傳真電話 = value;
				this.SendPropertyChanged("傳真電話");
				this.On傳真電話Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_首頁", DbType="NVarChar(MAX)")]
	public string 首頁
	{
		get
		{
			return this._首頁;
		}
		set
		{
			if ((this._首頁 != value))
			{
				this.On首頁Changing(value);
				this.SendPropertyChanging();
				this._首頁 = value;
				this.SendPropertyChanged("首頁");
				this.On首頁Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="供應商_產品資料", Storage="_產品資料", ThisKey="供應商編號", OtherKey="供應商編號")]
	public EntitySet<產品資料> 產品資料
	{
		get
		{
			return this._產品資料;
		}
		set
		{
			this._產品資料.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_產品資料(產品資料 entity)
	{
		this.SendPropertyChanging();
		entity.供應商 = this;
	}
	
	private void detach_產品資料(產品資料 entity)
	{
		this.SendPropertyChanging();
		entity.供應商 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.客戶")]
public partial class 客戶 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _客戶編號;
	
	private string _公司名稱;
	
	private string _連絡人;
	
	private string _連絡人職稱;
	
	private string _地址;
	
	private string _城市;
	
	private string _行政區;
	
	private string _郵遞區號;
	
	private string _國家地區;
	
	private string _電話;
	
	private string _傳真電話;
	
	private EntitySet<訂貨主檔> _訂貨主檔;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On客戶編號Changing(string value);
    partial void On客戶編號Changed();
    partial void On公司名稱Changing(string value);
    partial void On公司名稱Changed();
    partial void On連絡人Changing(string value);
    partial void On連絡人Changed();
    partial void On連絡人職稱Changing(string value);
    partial void On連絡人職稱Changed();
    partial void On地址Changing(string value);
    partial void On地址Changed();
    partial void On城市Changing(string value);
    partial void On城市Changed();
    partial void On行政區Changing(string value);
    partial void On行政區Changed();
    partial void On郵遞區號Changing(string value);
    partial void On郵遞區號Changed();
    partial void On國家地區Changing(string value);
    partial void On國家地區Changed();
    partial void On電話Changing(string value);
    partial void On電話Changed();
    partial void On傳真電話Changing(string value);
    partial void On傳真電話Changed();
    #endregion
	
	public 客戶()
	{
		this._訂貨主檔 = new EntitySet<訂貨主檔>(new Action<訂貨主檔>(this.attach_訂貨主檔), new Action<訂貨主檔>(this.detach_訂貨主檔));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_客戶編號", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string 客戶編號
	{
		get
		{
			return this._客戶編號;
		}
		set
		{
			if ((this._客戶編號 != value))
			{
				this.On客戶編號Changing(value);
				this.SendPropertyChanging();
				this._客戶編號 = value;
				this.SendPropertyChanged("客戶編號");
				this.On客戶編號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_公司名稱", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
	public string 公司名稱
	{
		get
		{
			return this._公司名稱;
		}
		set
		{
			if ((this._公司名稱 != value))
			{
				this.On公司名稱Changing(value);
				this.SendPropertyChanging();
				this._公司名稱 = value;
				this.SendPropertyChanged("公司名稱");
				this.On公司名稱Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_連絡人", DbType="NVarChar(30)")]
	public string 連絡人
	{
		get
		{
			return this._連絡人;
		}
		set
		{
			if ((this._連絡人 != value))
			{
				this.On連絡人Changing(value);
				this.SendPropertyChanging();
				this._連絡人 = value;
				this.SendPropertyChanged("連絡人");
				this.On連絡人Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_連絡人職稱", DbType="NVarChar(30)")]
	public string 連絡人職稱
	{
		get
		{
			return this._連絡人職稱;
		}
		set
		{
			if ((this._連絡人職稱 != value))
			{
				this.On連絡人職稱Changing(value);
				this.SendPropertyChanging();
				this._連絡人職稱 = value;
				this.SendPropertyChanged("連絡人職稱");
				this.On連絡人職稱Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_地址", DbType="NVarChar(60)")]
	public string 地址
	{
		get
		{
			return this._地址;
		}
		set
		{
			if ((this._地址 != value))
			{
				this.On地址Changing(value);
				this.SendPropertyChanging();
				this._地址 = value;
				this.SendPropertyChanged("地址");
				this.On地址Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_城市", DbType="NVarChar(15)")]
	public string 城市
	{
		get
		{
			return this._城市;
		}
		set
		{
			if ((this._城市 != value))
			{
				this.On城市Changing(value);
				this.SendPropertyChanging();
				this._城市 = value;
				this.SendPropertyChanged("城市");
				this.On城市Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_行政區", DbType="NVarChar(15)")]
	public string 行政區
	{
		get
		{
			return this._行政區;
		}
		set
		{
			if ((this._行政區 != value))
			{
				this.On行政區Changing(value);
				this.SendPropertyChanging();
				this._行政區 = value;
				this.SendPropertyChanged("行政區");
				this.On行政區Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_郵遞區號", DbType="NVarChar(10)")]
	public string 郵遞區號
	{
		get
		{
			return this._郵遞區號;
		}
		set
		{
			if ((this._郵遞區號 != value))
			{
				this.On郵遞區號Changing(value);
				this.SendPropertyChanging();
				this._郵遞區號 = value;
				this.SendPropertyChanged("郵遞區號");
				this.On郵遞區號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_國家地區", DbType="NVarChar(15)")]
	public string 國家地區
	{
		get
		{
			return this._國家地區;
		}
		set
		{
			if ((this._國家地區 != value))
			{
				this.On國家地區Changing(value);
				this.SendPropertyChanging();
				this._國家地區 = value;
				this.SendPropertyChanged("國家地區");
				this.On國家地區Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_電話", DbType="NVarChar(24)")]
	public string 電話
	{
		get
		{
			return this._電話;
		}
		set
		{
			if ((this._電話 != value))
			{
				this.On電話Changing(value);
				this.SendPropertyChanging();
				this._電話 = value;
				this.SendPropertyChanged("電話");
				this.On電話Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_傳真電話", DbType="NVarChar(24)")]
	public string 傳真電話
	{
		get
		{
			return this._傳真電話;
		}
		set
		{
			if ((this._傳真電話 != value))
			{
				this.On傳真電話Changing(value);
				this.SendPropertyChanging();
				this._傳真電話 = value;
				this.SendPropertyChanged("傳真電話");
				this.On傳真電話Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="客戶_訂貨主檔", Storage="_訂貨主檔", ThisKey="客戶編號", OtherKey="客戶編號")]
	public EntitySet<訂貨主檔> 訂貨主檔
	{
		get
		{
			return this._訂貨主檔;
		}
		set
		{
			this._訂貨主檔.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_訂貨主檔(訂貨主檔 entity)
	{
		this.SendPropertyChanging();
		entity.客戶 = this;
	}
	
	private void detach_訂貨主檔(訂貨主檔 entity)
	{
		this.SendPropertyChanging();
		entity.客戶 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.訂貨主檔")]
public partial class 訂貨主檔 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _訂單號碼;
	
	private string _客戶編號;
	
	private System.Nullable<int> _員工編號;
	
	private System.Nullable<System.DateTime> _訂單日期;
	
	private System.Nullable<System.DateTime> _要貨日期;
	
	private System.Nullable<System.DateTime> _送貨日期;
	
	private System.Nullable<int> _送貨方式;
	
	private System.Nullable<decimal> _運費;
	
	private string _收貨人;
	
	private string _送貨地址;
	
	private string _送貨城市;
	
	private string _送貨行政區;
	
	private string _送貨郵遞區號;
	
	private string _送貨國家地區;
	
	private EntitySet<訂貨明細> _訂貨明細;
	
	private EntityRef<客戶> _客戶;
	
	private EntityRef<員工> _員工;
	
	private EntityRef<貨運公司> _貨運公司;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On訂單號碼Changing(int value);
    partial void On訂單號碼Changed();
    partial void On客戶編號Changing(string value);
    partial void On客戶編號Changed();
    partial void On員工編號Changing(System.Nullable<int> value);
    partial void On員工編號Changed();
    partial void On訂單日期Changing(System.Nullable<System.DateTime> value);
    partial void On訂單日期Changed();
    partial void On要貨日期Changing(System.Nullable<System.DateTime> value);
    partial void On要貨日期Changed();
    partial void On送貨日期Changing(System.Nullable<System.DateTime> value);
    partial void On送貨日期Changed();
    partial void On送貨方式Changing(System.Nullable<int> value);
    partial void On送貨方式Changed();
    partial void On運費Changing(System.Nullable<decimal> value);
    partial void On運費Changed();
    partial void On收貨人Changing(string value);
    partial void On收貨人Changed();
    partial void On送貨地址Changing(string value);
    partial void On送貨地址Changed();
    partial void On送貨城市Changing(string value);
    partial void On送貨城市Changed();
    partial void On送貨行政區Changing(string value);
    partial void On送貨行政區Changed();
    partial void On送貨郵遞區號Changing(string value);
    partial void On送貨郵遞區號Changed();
    partial void On送貨國家地區Changing(string value);
    partial void On送貨國家地區Changed();
    #endregion
	
	public 訂貨主檔()
	{
		this._訂貨明細 = new EntitySet<訂貨明細>(new Action<訂貨明細>(this.attach_訂貨明細), new Action<訂貨明細>(this.detach_訂貨明細));
		this._客戶 = default(EntityRef<客戶>);
		this._員工 = default(EntityRef<員工>);
		this._貨運公司 = default(EntityRef<貨運公司>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_訂單號碼", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int 訂單號碼
	{
		get
		{
			return this._訂單號碼;
		}
		set
		{
			if ((this._訂單號碼 != value))
			{
				this.On訂單號碼Changing(value);
				this.SendPropertyChanging();
				this._訂單號碼 = value;
				this.SendPropertyChanged("訂單號碼");
				this.On訂單號碼Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_客戶編號", DbType="NVarChar(5)")]
	public string 客戶編號
	{
		get
		{
			return this._客戶編號;
		}
		set
		{
			if ((this._客戶編號 != value))
			{
				if (this._客戶.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.On客戶編號Changing(value);
				this.SendPropertyChanging();
				this._客戶編號 = value;
				this.SendPropertyChanged("客戶編號");
				this.On客戶編號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_員工編號", DbType="Int")]
	public System.Nullable<int> 員工編號
	{
		get
		{
			return this._員工編號;
		}
		set
		{
			if ((this._員工編號 != value))
			{
				if (this._員工.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.On員工編號Changing(value);
				this.SendPropertyChanging();
				this._員工編號 = value;
				this.SendPropertyChanged("員工編號");
				this.On員工編號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_訂單日期", DbType="DateTime")]
	public System.Nullable<System.DateTime> 訂單日期
	{
		get
		{
			return this._訂單日期;
		}
		set
		{
			if ((this._訂單日期 != value))
			{
				this.On訂單日期Changing(value);
				this.SendPropertyChanging();
				this._訂單日期 = value;
				this.SendPropertyChanged("訂單日期");
				this.On訂單日期Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_要貨日期", DbType="DateTime")]
	public System.Nullable<System.DateTime> 要貨日期
	{
		get
		{
			return this._要貨日期;
		}
		set
		{
			if ((this._要貨日期 != value))
			{
				this.On要貨日期Changing(value);
				this.SendPropertyChanging();
				this._要貨日期 = value;
				this.SendPropertyChanged("要貨日期");
				this.On要貨日期Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_送貨日期", DbType="DateTime")]
	public System.Nullable<System.DateTime> 送貨日期
	{
		get
		{
			return this._送貨日期;
		}
		set
		{
			if ((this._送貨日期 != value))
			{
				this.On送貨日期Changing(value);
				this.SendPropertyChanging();
				this._送貨日期 = value;
				this.SendPropertyChanged("送貨日期");
				this.On送貨日期Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_送貨方式", DbType="Int")]
	public System.Nullable<int> 送貨方式
	{
		get
		{
			return this._送貨方式;
		}
		set
		{
			if ((this._送貨方式 != value))
			{
				if (this._貨運公司.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.On送貨方式Changing(value);
				this.SendPropertyChanging();
				this._送貨方式 = value;
				this.SendPropertyChanged("送貨方式");
				this.On送貨方式Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_運費", DbType="Money")]
	public System.Nullable<decimal> 運費
	{
		get
		{
			return this._運費;
		}
		set
		{
			if ((this._運費 != value))
			{
				this.On運費Changing(value);
				this.SendPropertyChanging();
				this._運費 = value;
				this.SendPropertyChanged("運費");
				this.On運費Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_收貨人", DbType="NVarChar(40)")]
	public string 收貨人
	{
		get
		{
			return this._收貨人;
		}
		set
		{
			if ((this._收貨人 != value))
			{
				this.On收貨人Changing(value);
				this.SendPropertyChanging();
				this._收貨人 = value;
				this.SendPropertyChanged("收貨人");
				this.On收貨人Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_送貨地址", DbType="NVarChar(60)")]
	public string 送貨地址
	{
		get
		{
			return this._送貨地址;
		}
		set
		{
			if ((this._送貨地址 != value))
			{
				this.On送貨地址Changing(value);
				this.SendPropertyChanging();
				this._送貨地址 = value;
				this.SendPropertyChanged("送貨地址");
				this.On送貨地址Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_送貨城市", DbType="NVarChar(15)")]
	public string 送貨城市
	{
		get
		{
			return this._送貨城市;
		}
		set
		{
			if ((this._送貨城市 != value))
			{
				this.On送貨城市Changing(value);
				this.SendPropertyChanging();
				this._送貨城市 = value;
				this.SendPropertyChanged("送貨城市");
				this.On送貨城市Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_送貨行政區", DbType="NVarChar(15)")]
	public string 送貨行政區
	{
		get
		{
			return this._送貨行政區;
		}
		set
		{
			if ((this._送貨行政區 != value))
			{
				this.On送貨行政區Changing(value);
				this.SendPropertyChanging();
				this._送貨行政區 = value;
				this.SendPropertyChanged("送貨行政區");
				this.On送貨行政區Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_送貨郵遞區號", DbType="NVarChar(10)")]
	public string 送貨郵遞區號
	{
		get
		{
			return this._送貨郵遞區號;
		}
		set
		{
			if ((this._送貨郵遞區號 != value))
			{
				this.On送貨郵遞區號Changing(value);
				this.SendPropertyChanging();
				this._送貨郵遞區號 = value;
				this.SendPropertyChanged("送貨郵遞區號");
				this.On送貨郵遞區號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_送貨國家地區", DbType="NVarChar(15)")]
	public string 送貨國家地區
	{
		get
		{
			return this._送貨國家地區;
		}
		set
		{
			if ((this._送貨國家地區 != value))
			{
				this.On送貨國家地區Changing(value);
				this.SendPropertyChanging();
				this._送貨國家地區 = value;
				this.SendPropertyChanged("送貨國家地區");
				this.On送貨國家地區Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="訂貨主檔_訂貨明細", Storage="_訂貨明細", ThisKey="訂單號碼", OtherKey="訂單號碼")]
	public EntitySet<訂貨明細> 訂貨明細
	{
		get
		{
			return this._訂貨明細;
		}
		set
		{
			this._訂貨明細.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="客戶_訂貨主檔", Storage="_客戶", ThisKey="客戶編號", OtherKey="客戶編號", IsForeignKey=true)]
	public 客戶 客戶
	{
		get
		{
			return this._客戶.Entity;
		}
		set
		{
			客戶 previousValue = this._客戶.Entity;
			if (((previousValue != value) 
						|| (this._客戶.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._客戶.Entity = null;
					previousValue.訂貨主檔.Remove(this);
				}
				this._客戶.Entity = value;
				if ((value != null))
				{
					value.訂貨主檔.Add(this);
					this._客戶編號 = value.客戶編號;
				}
				else
				{
					this._客戶編號 = default(string);
				}
				this.SendPropertyChanged("客戶");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="員工_訂貨主檔", Storage="_員工", ThisKey="員工編號", OtherKey="員工編號", IsForeignKey=true)]
	public 員工 員工
	{
		get
		{
			return this._員工.Entity;
		}
		set
		{
			員工 previousValue = this._員工.Entity;
			if (((previousValue != value) 
						|| (this._員工.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._員工.Entity = null;
					previousValue.訂貨主檔.Remove(this);
				}
				this._員工.Entity = value;
				if ((value != null))
				{
					value.訂貨主檔.Add(this);
					this._員工編號 = value.員工編號;
				}
				else
				{
					this._員工編號 = default(Nullable<int>);
				}
				this.SendPropertyChanged("員工");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="貨運公司_訂貨主檔", Storage="_貨運公司", ThisKey="送貨方式", OtherKey="貨運公司編號", IsForeignKey=true)]
	public 貨運公司 貨運公司
	{
		get
		{
			return this._貨運公司.Entity;
		}
		set
		{
			貨運公司 previousValue = this._貨運公司.Entity;
			if (((previousValue != value) 
						|| (this._貨運公司.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._貨運公司.Entity = null;
					previousValue.訂貨主檔.Remove(this);
				}
				this._貨運公司.Entity = value;
				if ((value != null))
				{
					value.訂貨主檔.Add(this);
					this._送貨方式 = value.貨運公司編號;
				}
				else
				{
					this._送貨方式 = default(Nullable<int>);
				}
				this.SendPropertyChanged("貨運公司");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_訂貨明細(訂貨明細 entity)
	{
		this.SendPropertyChanging();
		entity.訂貨主檔 = this;
	}
	
	private void detach_訂貨明細(訂貨明細 entity)
	{
		this.SendPropertyChanging();
		entity.訂貨主檔 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.訂貨明細")]
public partial class 訂貨明細 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _訂單號碼;
	
	private int _產品編號;
	
	private decimal _單價;
	
	private short _數量;
	
	private float _折扣;
	
	private EntityRef<訂貨主檔> _訂貨主檔;
	
	private EntityRef<產品資料> _產品資料;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On訂單號碼Changing(int value);
    partial void On訂單號碼Changed();
    partial void On產品編號Changing(int value);
    partial void On產品編號Changed();
    partial void On單價Changing(decimal value);
    partial void On單價Changed();
    partial void On數量Changing(short value);
    partial void On數量Changed();
    partial void On折扣Changing(float value);
    partial void On折扣Changed();
    #endregion
	
	public 訂貨明細()
	{
		this._訂貨主檔 = default(EntityRef<訂貨主檔>);
		this._產品資料 = default(EntityRef<產品資料>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_訂單號碼", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int 訂單號碼
	{
		get
		{
			return this._訂單號碼;
		}
		set
		{
			if ((this._訂單號碼 != value))
			{
				if (this._訂貨主檔.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.On訂單號碼Changing(value);
				this.SendPropertyChanging();
				this._訂單號碼 = value;
				this.SendPropertyChanged("訂單號碼");
				this.On訂單號碼Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_產品編號", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int 產品編號
	{
		get
		{
			return this._產品編號;
		}
		set
		{
			if ((this._產品編號 != value))
			{
				if (this._產品資料.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.On產品編號Changing(value);
				this.SendPropertyChanging();
				this._產品編號 = value;
				this.SendPropertyChanged("產品編號");
				this.On產品編號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_單價", DbType="Money NOT NULL")]
	public decimal 單價
	{
		get
		{
			return this._單價;
		}
		set
		{
			if ((this._單價 != value))
			{
				this.On單價Changing(value);
				this.SendPropertyChanging();
				this._單價 = value;
				this.SendPropertyChanged("單價");
				this.On單價Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_數量", DbType="SmallInt NOT NULL")]
	public short 數量
	{
		get
		{
			return this._數量;
		}
		set
		{
			if ((this._數量 != value))
			{
				this.On數量Changing(value);
				this.SendPropertyChanging();
				this._數量 = value;
				this.SendPropertyChanged("數量");
				this.On數量Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_折扣", DbType="Real NOT NULL")]
	public float 折扣
	{
		get
		{
			return this._折扣;
		}
		set
		{
			if ((this._折扣 != value))
			{
				this.On折扣Changing(value);
				this.SendPropertyChanging();
				this._折扣 = value;
				this.SendPropertyChanged("折扣");
				this.On折扣Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="訂貨主檔_訂貨明細", Storage="_訂貨主檔", ThisKey="訂單號碼", OtherKey="訂單號碼", IsForeignKey=true)]
	public 訂貨主檔 訂貨主檔
	{
		get
		{
			return this._訂貨主檔.Entity;
		}
		set
		{
			訂貨主檔 previousValue = this._訂貨主檔.Entity;
			if (((previousValue != value) 
						|| (this._訂貨主檔.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._訂貨主檔.Entity = null;
					previousValue.訂貨明細.Remove(this);
				}
				this._訂貨主檔.Entity = value;
				if ((value != null))
				{
					value.訂貨明細.Add(this);
					this._訂單號碼 = value.訂單號碼;
				}
				else
				{
					this._訂單號碼 = default(int);
				}
				this.SendPropertyChanged("訂貨主檔");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="產品資料_訂貨明細", Storage="_產品資料", ThisKey="產品編號", OtherKey="產品編號", IsForeignKey=true)]
	public 產品資料 產品資料
	{
		get
		{
			return this._產品資料.Entity;
		}
		set
		{
			產品資料 previousValue = this._產品資料.Entity;
			if (((previousValue != value) 
						|| (this._產品資料.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._產品資料.Entity = null;
					previousValue.訂貨明細.Remove(this);
				}
				this._產品資料.Entity = value;
				if ((value != null))
				{
					value.訂貨明細.Add(this);
					this._產品編號 = value.產品編號;
				}
				else
				{
					this._產品編號 = default(int);
				}
				this.SendPropertyChanged("產品資料");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.員工")]
public partial class 員工 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _員工編號;
	
	private string _姓名;
	
	private string _名;
	
	private string _職稱;
	
	private string _稱呼;
	
	private System.Nullable<System.DateTime> _出生日期;
	
	private System.Nullable<System.DateTime> _雇用日期;
	
	private string _地址;
	
	private string _城市;
	
	private string _行政區;
	
	private string _區域號碼;
	
	private string _國家地區;
	
	private string _電話號碼;
	
	private string _內部分機號碼;
	
	private string _相片;
	
	private string _附註;
	
	private System.Nullable<int> _主管;
	
	private EntitySet<訂貨主檔> _訂貨主檔;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On員工編號Changing(int value);
    partial void On員工編號Changed();
    partial void On姓名Changing(string value);
    partial void On姓名Changed();
    partial void On名Changing(string value);
    partial void On名Changed();
    partial void On職稱Changing(string value);
    partial void On職稱Changed();
    partial void On稱呼Changing(string value);
    partial void On稱呼Changed();
    partial void On出生日期Changing(System.Nullable<System.DateTime> value);
    partial void On出生日期Changed();
    partial void On雇用日期Changing(System.Nullable<System.DateTime> value);
    partial void On雇用日期Changed();
    partial void On地址Changing(string value);
    partial void On地址Changed();
    partial void On城市Changing(string value);
    partial void On城市Changed();
    partial void On行政區Changing(string value);
    partial void On行政區Changed();
    partial void On區域號碼Changing(string value);
    partial void On區域號碼Changed();
    partial void On國家地區Changing(string value);
    partial void On國家地區Changed();
    partial void On電話號碼Changing(string value);
    partial void On電話號碼Changed();
    partial void On內部分機號碼Changing(string value);
    partial void On內部分機號碼Changed();
    partial void On相片Changing(string value);
    partial void On相片Changed();
    partial void On附註Changing(string value);
    partial void On附註Changed();
    partial void On主管Changing(System.Nullable<int> value);
    partial void On主管Changed();
    #endregion
	
	public 員工()
	{
		this._訂貨主檔 = new EntitySet<訂貨主檔>(new Action<訂貨主檔>(this.attach_訂貨主檔), new Action<訂貨主檔>(this.detach_訂貨主檔));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_員工編號", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int 員工編號
	{
		get
		{
			return this._員工編號;
		}
		set
		{
			if ((this._員工編號 != value))
			{
				this.On員工編號Changing(value);
				this.SendPropertyChanging();
				this._員工編號 = value;
				this.SendPropertyChanged("員工編號");
				this.On員工編號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_姓名", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string 姓名
	{
		get
		{
			return this._姓名;
		}
		set
		{
			if ((this._姓名 != value))
			{
				this.On姓名Changing(value);
				this.SendPropertyChanging();
				this._姓名 = value;
				this.SendPropertyChanged("姓名");
				this.On姓名Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_名", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string 名
	{
		get
		{
			return this._名;
		}
		set
		{
			if ((this._名 != value))
			{
				this.On名Changing(value);
				this.SendPropertyChanging();
				this._名 = value;
				this.SendPropertyChanged("名");
				this.On名Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_職稱", DbType="NVarChar(30)")]
	public string 職稱
	{
		get
		{
			return this._職稱;
		}
		set
		{
			if ((this._職稱 != value))
			{
				this.On職稱Changing(value);
				this.SendPropertyChanging();
				this._職稱 = value;
				this.SendPropertyChanged("職稱");
				this.On職稱Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_稱呼", DbType="NVarChar(25)")]
	public string 稱呼
	{
		get
		{
			return this._稱呼;
		}
		set
		{
			if ((this._稱呼 != value))
			{
				this.On稱呼Changing(value);
				this.SendPropertyChanging();
				this._稱呼 = value;
				this.SendPropertyChanged("稱呼");
				this.On稱呼Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_出生日期", DbType="DateTime")]
	public System.Nullable<System.DateTime> 出生日期
	{
		get
		{
			return this._出生日期;
		}
		set
		{
			if ((this._出生日期 != value))
			{
				this.On出生日期Changing(value);
				this.SendPropertyChanging();
				this._出生日期 = value;
				this.SendPropertyChanged("出生日期");
				this.On出生日期Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_雇用日期", DbType="DateTime")]
	public System.Nullable<System.DateTime> 雇用日期
	{
		get
		{
			return this._雇用日期;
		}
		set
		{
			if ((this._雇用日期 != value))
			{
				this.On雇用日期Changing(value);
				this.SendPropertyChanging();
				this._雇用日期 = value;
				this.SendPropertyChanged("雇用日期");
				this.On雇用日期Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_地址", DbType="NVarChar(60)")]
	public string 地址
	{
		get
		{
			return this._地址;
		}
		set
		{
			if ((this._地址 != value))
			{
				this.On地址Changing(value);
				this.SendPropertyChanging();
				this._地址 = value;
				this.SendPropertyChanged("地址");
				this.On地址Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_城市", DbType="NVarChar(15)")]
	public string 城市
	{
		get
		{
			return this._城市;
		}
		set
		{
			if ((this._城市 != value))
			{
				this.On城市Changing(value);
				this.SendPropertyChanging();
				this._城市 = value;
				this.SendPropertyChanged("城市");
				this.On城市Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_行政區", DbType="NVarChar(15)")]
	public string 行政區
	{
		get
		{
			return this._行政區;
		}
		set
		{
			if ((this._行政區 != value))
			{
				this.On行政區Changing(value);
				this.SendPropertyChanging();
				this._行政區 = value;
				this.SendPropertyChanged("行政區");
				this.On行政區Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_區域號碼", DbType="NVarChar(10)")]
	public string 區域號碼
	{
		get
		{
			return this._區域號碼;
		}
		set
		{
			if ((this._區域號碼 != value))
			{
				this.On區域號碼Changing(value);
				this.SendPropertyChanging();
				this._區域號碼 = value;
				this.SendPropertyChanged("區域號碼");
				this.On區域號碼Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_國家地區", DbType="NVarChar(15)")]
	public string 國家地區
	{
		get
		{
			return this._國家地區;
		}
		set
		{
			if ((this._國家地區 != value))
			{
				this.On國家地區Changing(value);
				this.SendPropertyChanging();
				this._國家地區 = value;
				this.SendPropertyChanged("國家地區");
				this.On國家地區Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_電話號碼", DbType="NVarChar(24)")]
	public string 電話號碼
	{
		get
		{
			return this._電話號碼;
		}
		set
		{
			if ((this._電話號碼 != value))
			{
				this.On電話號碼Changing(value);
				this.SendPropertyChanging();
				this._電話號碼 = value;
				this.SendPropertyChanged("電話號碼");
				this.On電話號碼Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_內部分機號碼", DbType="NVarChar(4)")]
	public string 內部分機號碼
	{
		get
		{
			return this._內部分機號碼;
		}
		set
		{
			if ((this._內部分機號碼 != value))
			{
				this.On內部分機號碼Changing(value);
				this.SendPropertyChanging();
				this._內部分機號碼 = value;
				this.SendPropertyChanged("內部分機號碼");
				this.On內部分機號碼Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_相片", DbType="NVarChar(255)")]
	public string 相片
	{
		get
		{
			return this._相片;
		}
		set
		{
			if ((this._相片 != value))
			{
				this.On相片Changing(value);
				this.SendPropertyChanging();
				this._相片 = value;
				this.SendPropertyChanged("相片");
				this.On相片Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_附註", DbType="NVarChar(MAX)")]
	public string 附註
	{
		get
		{
			return this._附註;
		}
		set
		{
			if ((this._附註 != value))
			{
				this.On附註Changing(value);
				this.SendPropertyChanging();
				this._附註 = value;
				this.SendPropertyChanged("附註");
				this.On附註Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_主管", DbType="Int")]
	public System.Nullable<int> 主管
	{
		get
		{
			return this._主管;
		}
		set
		{
			if ((this._主管 != value))
			{
				this.On主管Changing(value);
				this.SendPropertyChanging();
				this._主管 = value;
				this.SendPropertyChanged("主管");
				this.On主管Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="員工_訂貨主檔", Storage="_訂貨主檔", ThisKey="員工編號", OtherKey="員工編號")]
	public EntitySet<訂貨主檔> 訂貨主檔
	{
		get
		{
			return this._訂貨主檔;
		}
		set
		{
			this._訂貨主檔.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_訂貨主檔(訂貨主檔 entity)
	{
		this.SendPropertyChanging();
		entity.員工 = this;
	}
	
	private void detach_訂貨主檔(訂貨主檔 entity)
	{
		this.SendPropertyChanging();
		entity.員工 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.產品資料")]
public partial class 產品資料 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _產品編號;
	
	private string _產品;
	
	private System.Nullable<int> _供應商編號;
	
	private System.Nullable<int> _類別編號;
	
	private string _單位數量;
	
	private System.Nullable<decimal> _單價;
	
	private System.Nullable<short> _庫存量;
	
	private System.Nullable<short> _已訂購量;
	
	private System.Nullable<short> _安全存量;
	
	private bool _不再銷售;
	
	private EntitySet<訂貨明細> _訂貨明細;
	
	private EntityRef<供應商> _供應商;
	
	private EntityRef<產品類別> _產品類別;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On產品編號Changing(int value);
    partial void On產品編號Changed();
    partial void On產品Changing(string value);
    partial void On產品Changed();
    partial void On供應商編號Changing(System.Nullable<int> value);
    partial void On供應商編號Changed();
    partial void On類別編號Changing(System.Nullable<int> value);
    partial void On類別編號Changed();
    partial void On單位數量Changing(string value);
    partial void On單位數量Changed();
    partial void On單價Changing(System.Nullable<decimal> value);
    partial void On單價Changed();
    partial void On庫存量Changing(System.Nullable<short> value);
    partial void On庫存量Changed();
    partial void On已訂購量Changing(System.Nullable<short> value);
    partial void On已訂購量Changed();
    partial void On安全存量Changing(System.Nullable<short> value);
    partial void On安全存量Changed();
    partial void On不再銷售Changing(bool value);
    partial void On不再銷售Changed();
    #endregion
	
	public 產品資料()
	{
		this._訂貨明細 = new EntitySet<訂貨明細>(new Action<訂貨明細>(this.attach_訂貨明細), new Action<訂貨明細>(this.detach_訂貨明細));
		this._供應商 = default(EntityRef<供應商>);
		this._產品類別 = default(EntityRef<產品類別>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_產品編號", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int 產品編號
	{
		get
		{
			return this._產品編號;
		}
		set
		{
			if ((this._產品編號 != value))
			{
				this.On產品編號Changing(value);
				this.SendPropertyChanging();
				this._產品編號 = value;
				this.SendPropertyChanged("產品編號");
				this.On產品編號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_產品", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
	public string 產品
	{
		get
		{
			return this._產品;
		}
		set
		{
			if ((this._產品 != value))
			{
				this.On產品Changing(value);
				this.SendPropertyChanging();
				this._產品 = value;
				this.SendPropertyChanged("產品");
				this.On產品Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_供應商編號", DbType="Int")]
	public System.Nullable<int> 供應商編號
	{
		get
		{
			return this._供應商編號;
		}
		set
		{
			if ((this._供應商編號 != value))
			{
				if (this._供應商.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.On供應商編號Changing(value);
				this.SendPropertyChanging();
				this._供應商編號 = value;
				this.SendPropertyChanged("供應商編號");
				this.On供應商編號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_類別編號", DbType="Int")]
	public System.Nullable<int> 類別編號
	{
		get
		{
			return this._類別編號;
		}
		set
		{
			if ((this._類別編號 != value))
			{
				if (this._產品類別.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.On類別編號Changing(value);
				this.SendPropertyChanging();
				this._類別編號 = value;
				this.SendPropertyChanged("類別編號");
				this.On類別編號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_單位數量", DbType="NVarChar(20)")]
	public string 單位數量
	{
		get
		{
			return this._單位數量;
		}
		set
		{
			if ((this._單位數量 != value))
			{
				this.On單位數量Changing(value);
				this.SendPropertyChanging();
				this._單位數量 = value;
				this.SendPropertyChanged("單位數量");
				this.On單位數量Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_單價", DbType="Money")]
	public System.Nullable<decimal> 單價
	{
		get
		{
			return this._單價;
		}
		set
		{
			if ((this._單價 != value))
			{
				this.On單價Changing(value);
				this.SendPropertyChanging();
				this._單價 = value;
				this.SendPropertyChanged("單價");
				this.On單價Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_庫存量", DbType="SmallInt")]
	public System.Nullable<short> 庫存量
	{
		get
		{
			return this._庫存量;
		}
		set
		{
			if ((this._庫存量 != value))
			{
				this.On庫存量Changing(value);
				this.SendPropertyChanging();
				this._庫存量 = value;
				this.SendPropertyChanged("庫存量");
				this.On庫存量Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_已訂購量", DbType="SmallInt")]
	public System.Nullable<short> 已訂購量
	{
		get
		{
			return this._已訂購量;
		}
		set
		{
			if ((this._已訂購量 != value))
			{
				this.On已訂購量Changing(value);
				this.SendPropertyChanging();
				this._已訂購量 = value;
				this.SendPropertyChanged("已訂購量");
				this.On已訂購量Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_安全存量", DbType="SmallInt")]
	public System.Nullable<short> 安全存量
	{
		get
		{
			return this._安全存量;
		}
		set
		{
			if ((this._安全存量 != value))
			{
				this.On安全存量Changing(value);
				this.SendPropertyChanging();
				this._安全存量 = value;
				this.SendPropertyChanged("安全存量");
				this.On安全存量Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_不再銷售", DbType="Bit NOT NULL")]
	public bool 不再銷售
	{
		get
		{
			return this._不再銷售;
		}
		set
		{
			if ((this._不再銷售 != value))
			{
				this.On不再銷售Changing(value);
				this.SendPropertyChanging();
				this._不再銷售 = value;
				this.SendPropertyChanged("不再銷售");
				this.On不再銷售Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="產品資料_訂貨明細", Storage="_訂貨明細", ThisKey="產品編號", OtherKey="產品編號")]
	public EntitySet<訂貨明細> 訂貨明細
	{
		get
		{
			return this._訂貨明細;
		}
		set
		{
			this._訂貨明細.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="供應商_產品資料", Storage="_供應商", ThisKey="供應商編號", OtherKey="供應商編號", IsForeignKey=true)]
	public 供應商 供應商
	{
		get
		{
			return this._供應商.Entity;
		}
		set
		{
			供應商 previousValue = this._供應商.Entity;
			if (((previousValue != value) 
						|| (this._供應商.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._供應商.Entity = null;
					previousValue.產品資料.Remove(this);
				}
				this._供應商.Entity = value;
				if ((value != null))
				{
					value.產品資料.Add(this);
					this._供應商編號 = value.供應商編號;
				}
				else
				{
					this._供應商編號 = default(Nullable<int>);
				}
				this.SendPropertyChanged("供應商");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="產品類別_產品資料", Storage="_產品類別", ThisKey="類別編號", OtherKey="類別編號", IsForeignKey=true)]
	public 產品類別 產品類別
	{
		get
		{
			return this._產品類別.Entity;
		}
		set
		{
			產品類別 previousValue = this._產品類別.Entity;
			if (((previousValue != value) 
						|| (this._產品類別.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._產品類別.Entity = null;
					previousValue.產品資料.Remove(this);
				}
				this._產品類別.Entity = value;
				if ((value != null))
				{
					value.產品資料.Add(this);
					this._類別編號 = value.類別編號;
				}
				else
				{
					this._類別編號 = default(Nullable<int>);
				}
				this.SendPropertyChanged("產品類別");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_訂貨明細(訂貨明細 entity)
	{
		this.SendPropertyChanging();
		entity.產品資料 = this;
	}
	
	private void detach_訂貨明細(訂貨明細 entity)
	{
		this.SendPropertyChanging();
		entity.產品資料 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.產品類別")]
public partial class 產品類別 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _類別編號;
	
	private string _類別名稱;
	
	private string _說明;
	
	private System.Data.Linq.Binary _圖片;
	
	private EntitySet<產品資料> _產品資料;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On類別編號Changing(int value);
    partial void On類別編號Changed();
    partial void On類別名稱Changing(string value);
    partial void On類別名稱Changed();
    partial void On說明Changing(string value);
    partial void On說明Changed();
    partial void On圖片Changing(System.Data.Linq.Binary value);
    partial void On圖片Changed();
    #endregion
	
	public 產品類別()
	{
		this._產品資料 = new EntitySet<產品資料>(new Action<產品資料>(this.attach_產品資料), new Action<產品資料>(this.detach_產品資料));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_類別編號", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int 類別編號
	{
		get
		{
			return this._類別編號;
		}
		set
		{
			if ((this._類別編號 != value))
			{
				this.On類別編號Changing(value);
				this.SendPropertyChanging();
				this._類別編號 = value;
				this.SendPropertyChanged("類別編號");
				this.On類別編號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_類別名稱", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string 類別名稱
	{
		get
		{
			return this._類別名稱;
		}
		set
		{
			if ((this._類別名稱 != value))
			{
				this.On類別名稱Changing(value);
				this.SendPropertyChanging();
				this._類別名稱 = value;
				this.SendPropertyChanged("類別名稱");
				this.On類別名稱Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_說明", DbType="NVarChar(MAX)")]
	public string 說明
	{
		get
		{
			return this._說明;
		}
		set
		{
			if ((this._說明 != value))
			{
				this.On說明Changing(value);
				this.SendPropertyChanging();
				this._說明 = value;
				this.SendPropertyChanged("說明");
				this.On說明Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_圖片", DbType="Image", UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary 圖片
	{
		get
		{
			return this._圖片;
		}
		set
		{
			if ((this._圖片 != value))
			{
				this.On圖片Changing(value);
				this.SendPropertyChanging();
				this._圖片 = value;
				this.SendPropertyChanged("圖片");
				this.On圖片Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="產品類別_產品資料", Storage="_產品資料", ThisKey="類別編號", OtherKey="類別編號")]
	public EntitySet<產品資料> 產品資料
	{
		get
		{
			return this._產品資料;
		}
		set
		{
			this._產品資料.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_產品資料(產品資料 entity)
	{
		this.SendPropertyChanging();
		entity.產品類別 = this;
	}
	
	private void detach_產品資料(產品資料 entity)
	{
		this.SendPropertyChanging();
		entity.產品類別 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.貨運公司")]
public partial class 貨運公司 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _貨運公司編號;
	
	private string _貨運公司名稱;
	
	private string _電話;
	
	private EntitySet<訂貨主檔> _訂貨主檔;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On貨運公司編號Changing(int value);
    partial void On貨運公司編號Changed();
    partial void On貨運公司名稱Changing(string value);
    partial void On貨運公司名稱Changed();
    partial void On電話Changing(string value);
    partial void On電話Changed();
    #endregion
	
	public 貨運公司()
	{
		this._訂貨主檔 = new EntitySet<訂貨主檔>(new Action<訂貨主檔>(this.attach_訂貨主檔), new Action<訂貨主檔>(this.detach_訂貨主檔));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貨運公司編號", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int 貨運公司編號
	{
		get
		{
			return this._貨運公司編號;
		}
		set
		{
			if ((this._貨運公司編號 != value))
			{
				this.On貨運公司編號Changing(value);
				this.SendPropertyChanging();
				this._貨運公司編號 = value;
				this.SendPropertyChanged("貨運公司編號");
				this.On貨運公司編號Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貨運公司名稱", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
	public string 貨運公司名稱
	{
		get
		{
			return this._貨運公司名稱;
		}
		set
		{
			if ((this._貨運公司名稱 != value))
			{
				this.On貨運公司名稱Changing(value);
				this.SendPropertyChanging();
				this._貨運公司名稱 = value;
				this.SendPropertyChanged("貨運公司名稱");
				this.On貨運公司名稱Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_電話", DbType="NVarChar(24)")]
	public string 電話
	{
		get
		{
			return this._電話;
		}
		set
		{
			if ((this._電話 != value))
			{
				this.On電話Changing(value);
				this.SendPropertyChanging();
				this._電話 = value;
				this.SendPropertyChanged("電話");
				this.On電話Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="貨運公司_訂貨主檔", Storage="_訂貨主檔", ThisKey="貨運公司編號", OtherKey="送貨方式")]
	public EntitySet<訂貨主檔> 訂貨主檔
	{
		get
		{
			return this._訂貨主檔;
		}
		set
		{
			this._訂貨主檔.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_訂貨主檔(訂貨主檔 entity)
	{
		this.SendPropertyChanging();
		entity.貨運公司 = this;
	}
	
	private void detach_訂貨主檔(訂貨主檔 entity)
	{
		this.SendPropertyChanging();
		entity.貨運公司 = null;
	}
}
#pragma warning restore 1591
